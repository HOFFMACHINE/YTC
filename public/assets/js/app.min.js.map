{"version":3,"sources":["app.module.js","index.module.js","index.controller.js","api.service.js","app-embed.directive.js"],"names":[],"mappingsrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.min.js","sourcesContent":["(function ()\n{\n    'use strict';\n\n    angular.module('app', [\n        'app.index'\n    ]);\n})();\n","(function ()\n{\n    'use strict';\n\n    angular.module('app.index', []);\n})();\n","(function ()\n{\n    'use strict';\n\n    angular.module('app.index')\n           .controller('IndexController', IndexController);\n\n    IndexController.$inject = ['api', '$sce'];\n\n\n\n    function IndexController(api, $sce)\n    {\n\n        var vm = this;\n\n        vm.user = [];\n        vm.fragment = [];\n        vm.test = [];\n        vm.postInfo = [];\n        vm.cloudinary = [];\n        vm.download = [];\n\n        vm.preview = preview;\n        vm.create = create;\n        vm.postInfo = postInfo;\n        vm.cloudinary = cloudinary;\n        vm.download = download;\n\n        getUser();\n        postInfo();\n        /*\n         |--------------------------------------------------------------------------------------------------------------\n         | Fragments Create\n         |--------------------------------------------------------------------------------------------------------------\n         */\n        // postInfo = function() {\n        //     vm.info = !vm.info;\n        // };\n\n        /*\n         |--------------------------------------------------------------------------------------------------------------\n         | Fragments Download\n         |--------------------------------------------------------------------------------------------------------------\n         */\n\n        function download() {\n\n            var data = {\n                user_id: '28'\n            };\n\n            api.download(data).then(function (data) {\n                vm.download = data;\n\n            });\n\n        }\n\n        function postInfo()\n        {\n\n            var data = {\n                url: vm.fragment.url\n            };\n\n            api.postInfo(data).then(function (data)\n            {\n                vm.postInfo = data;\n            });\n        }\n\n        /*\n         |--------------------------------------------------------------------------------------------------------------\n         | Fragments Claudinary\n         |--------------------------------------------------------------------------------------------------------------\n         */\n\n        function cloudinary() {\n\n            var data = {\n                user_id: '28'\n            };\n\n            api.cloudinary(data).then(function (data) {\n                vm.cloudinary = data;\n\n            });\n\n        }\n\n\n\n        /*\n         |--------------------------------------------------------------------------------------------------------------\n         | Fragments Create\n         |--------------------------------------------------------------------------------------------------------------\n         */\n\n        function create()\n        {\n            var data = {\n                url: vm.fragment.url,\n                user_id: 28,\n                start: vm.fragment.start,\n                end: vm.fragment.end\n            };\n\n            vm.fragment.isCreating = true;\n\n            api.postFragmentCreate(data).then(function (data)\n            {\n                vm.fragment = data;\n                // vm.fragment.isCreated = true;\n                download();\n            });\n\n\n\n        }\n\n        /*\n         |--------------------------------------------------------------------------------------------------------------\n         | Fragments\n         |--------------------------------------------------------------------------------------------------------------\n         */\n\n        function preview()\n        {\n            var data = {\n                url: vm.fragment.url,\n                start: vm.fragment.start,\n                end: vm.fragment.end\n            };\n\n            api.getEmbedUrl(data).then(function (data)\n            {\n                vm.fragment.embed_url = $sce.trustAsResourceUrl(data);\n            });\n\n        }\n\n        /*\n         |--------------------------------------------------------------------------------------------------------------\n         | Users\n         |--------------------------------------------------------------------------------------------------------------\n         */\n\n        function getUser()\n        {\n            api.getUser().then(function (data)\n            {\n                vm.user = data;\n            });\n        }\n    }\n})();\n","(function ()\n{\n    'use strict';\n\n    angular.module('app.index')\n           .factory('api', api);\n\n    api.$inject = ['$http'];\n\n    function api($http)\n    {\n        return {\n            \"getEmbedUrl\": getEmbedUrl,\n            \"getUser\": getUser,\n            \"postFragmentCreate\": postFragmentCreate,\n            \"postInfo\": postInfo,\n            \"cloudinary\": cloudinary,\n            \"download\": download\n        };\n\n        function postInfo(data)\n        {\n            return $http.post('/api/fragments/video/info', data).then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        function cloudinary(data)\n        {\n            return $http.post('/api/cloudinary', data).then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        function download(data)\n        {\n            return $http.post('/api/download', data).then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        function getEmbedUrl(data)\n        {\n            return $http.post('/api/fragments/embed_url', data).then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        function postFragmentCreate(data)  {\n            return $http.post('/api/fragments/create', data).then(function (response)\n            {\n                return response.data;\n            });\n\n        }\n\n        function getUser()\n        {\n            return $http.get('/api/users/me').then(function (response)\n            {\n                return response.data;\n            });\n        }\n    }\n})();\n","(function()\n{\n    'use strict';\n\n    angular.module('app.index')\n           .directive('appEmbed', appEmbed);\n\n    function appEmbed()\n    {\n        return {\n            restrict: 'A',\n            link: link\n        };\n\n        function link(scope, element, attributes)\n        {\n            $(element).embed();\n        }\n    }\n})();\n"]}