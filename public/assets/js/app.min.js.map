{"version":3,"sources":["app.module.js","index.module.js","index.controller.js","auth.config.js","api.service.js","app-tab.directive.js","app-modal.directive.js"],"names":[],"mappingsxWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.min.js","sourcesContent":["(function ()\n{\n    'use strict';\n\n    angular.module('app', [\n        'app.index'\n    ]);\n})();\n","(function ()\n{\n    'use strict';\n\n    angular.module('app.index', [\n        'ng-token-auth',\n        '720kb.socialshare',\n        'ngclipboard',\n        'ui-rangeSlider'\n    ]);\n})();\n","(function ()\n{\n    'use strict';\n\n    angular.module('app.index')\n           .controller('IndexController', IndexController);\n\n    IndexController.$inject = ['$auth', '$sce', '$interval', '$timeout', 'api'];\n\n    function IndexController($auth, $sce, $interval, $timeout, api)\n    {\n        var vm = this;\n\n        vm.error           = '';\n        vm.user            = $auth.user;\n        vm.video           = [];\n        vm.fragment        = [];\n        vm.active_fragment = [];\n        vm.results         = [];\n\n        vm.login               = login;\n        vm.logout              = logout;\n        vm.getUserFragments    = getUserFragments;\n        vm.createVideo         = createVideo;\n        vm.downloadVideo       = downloadVideo;\n        vm.uploadVideo         = uploadVideo;\n        vm.getVideoStatus      = getVideoStatus;\n        vm.getVideoError       = getVideoError;\n        vm.getVideoEmbedUrl    = getVideoEmbedUrl;\n        vm.newFragment         = newFragment;\n        vm.setActiveFragment   = setActiveFragment;\n        vm.createFragment      = createFragment;\n        // vm.previewFragment     = previewFragment;\n        vm.deleteFragment      = deleteFragment;\n        vm.uploadFragment      = uploadFragment;\n        vm.getFragmentStatus   = getFragmentStatus;\n        vm.getFragmentError    = getFragmentError;\n        vm.getFragmentUrl      = getFragmentUrl;\n        vm.getFragmentEmbedUrl = getFragmentEmbedUrl;\n\n        /*\n         |--------------------------------------------------------------------------------------------------------------\n         | Auth\n         |--------------------------------------------------------------------------------------------------------------\n         */\n\n        function login()\n        {\n            $auth.authenticate('google');\n        }\n\n        function logout()\n        {\n            $auth.signOut();\n        }\n\n        /*\n         |--------------------------------------------------------------------------------------------------------------\n         | Users\n         |--------------------------------------------------------------------------------------------------------------\n         */\n\n        function getUserFragments()\n        {\n            var data = {\n                id: vm.user.id\n            };\n\n            api.getUserFragments(data).then(function (data)\n            {\n                vm.user.fragments = data;\n            });\n        }\n\n        /*\n         |--------------------------------------------------------------------------------------------------------------\n         | Videos\n         |--------------------------------------------------------------------------------------------------------------\n         */\n\n        function createVideo()\n        {\n            var data = {\n                url: vm.video.url\n            };\n\n            api.createVideo(data).then(function (data)\n            {\n                vm.video = data;\n                vm.video.isCreated = true;\n\n                vm.fragment.start_from  = 0;\n                vm.fragment.end_from    = vm.video.duration;\n                vm.fragment.title       = vm.video.title;\n                vm.fragment.description = vm.video.description;\n\n                getVideoEmbedUrl();\n            });\n        }\n\n        function setActiveFragment(fragment)\n        {\n            vm.active_fragment = fragment;\n\n            var data = {\n                id: vm.active_fragment.id\n            };\n\n            api.getFragmentEmbedUrl(data).then(function (data)\n            {\n                vm.active_fragment.embed_url = $sce.trustAsResourceUrl(data.embed_url);\n            });\n        }\n\n        function deleteFragment()\n        {\n            var data = {\n                id: vm.active_fragment.id\n            };\n\n            api.deleteFragment(data).then(function ()\n            {\n                getUserFragments();\n            });\n        }\n\n        function downloadVideo()\n        {\n            var data = {\n                id: vm.video.id\n            };\n\n            api.downloadVideo(data).then(function (data)\n            {\n                vm.video.job_id = data.job_id;\n\n                var status = $interval(function ()\n                {\n                    if (vm.video.status == 'error')\n                    {\n                        getVideoError();\n                        newFragment();\n\n                        $interval.cancel(status);\n                    }\n\n                    if (vm.video.status == 'downloaded')\n                    {\n                        uploadVideo();\n\n                        $interval.cancel(status);\n                    }\n\n                    if (vm.video.status == 'uploaded')\n                    {\n                        uploadFragment();\n\n                        $interval.cancel(status);\n                    }\n\n                    getVideoStatus();\n                }, 5000);\n            });\n        }\n\n        function uploadVideo()\n        {\n            var data = {\n                id: vm.video.id\n            };\n\n            api.uploadVideo(data).then(function (data)\n            {\n                vm.video.job_id = data.job_id;\n\n                var status = $interval(function ()\n                {\n                    if (vm.video.status == 'error')\n                    {\n                        getVideoError();\n                        newFragment();\n\n                        $interval.cancel(status);\n                    }\n\n                    if (vm.video.status == 'uploaded')\n                    {\n                        uploadFragment();\n\n                        $interval.cancel(status);\n                    }\n\n                    getVideoStatus();\n                }, 5000);\n            });\n        }\n\n        function getVideoEmbedUrl()\n        {\n            var data = {\n                id: vm.video.id,\n                start_from: vm.fragment.start_from,\n                end_from: vm.fragment.end_from\n            };\n\n            api.getVideoEmbedUrl(data).then(function (data)\n            {\n                vm.video.embed_url = $sce.trustAsResourceUrl(data.embed_url);\n            });\n        }\n\n        function getVideoStatus()\n        {\n            var data = {\n                id: vm.video.id,\n                job_id: vm.video.job_id\n            };\n\n            api.getVideoStatus(data).then(function (data)\n            {\n                vm.video.status = data.status;\n            });\n        }\n\n        function getVideoError()\n        {\n            var data = {\n                id: vm.video.id\n            };\n\n            api.getVideoError(data).then(function (data)\n            {\n                vm.error = data.error;\n            });\n        }\n\n        /*\n         |--------------------------------------------------------------------------------------------------------------\n         | Fragments\n         |--------------------------------------------------------------------------------------------------------------\n         */\n\n        function newFragment()\n        {\n            vm.error    = '';\n            vm.video    = [];\n            vm.fragment = [];\n        }\n\n        function createFragment()\n        {\n            var data = {\n                user_id: vm.user.id,\n                video_id: vm.video.id,\n                start_from: vm.fragment.start_from,\n                end_from: vm.fragment.end_from,\n                title: vm.fragment.title,\n                description: vm.fragment.description\n            };\n\n            api.createFragment(data).then(function (data)\n            {\n                vm.fragment = data;\n                vm.fragment.isCreating = true;\n\n                downloadVideo();\n            });\n        }\n\n        function uploadFragment()\n        {\n            var data = {\n                id: vm.fragment.id\n            };\n\n            api.uploadFragment(data).then(function (data)\n            {\n                vm.fragment.job_id = data.job_id;\n\n                var status = $interval(function ()\n                {\n                    if (vm.fragment.status == 'error')\n                    {\n                        getFragmentError();\n                        newFragment();\n\n                        $interval.cancel(status);\n                    }\n\n                    if (vm.fragment.status == 'uploaded')\n                    {\n                        getFragmentUrl();\n\n                        $timeout(function ()\n                        {\n                            vm.video.isCreated = false;\n                            vm.fragment.isCreating = false;\n                            vm.fragment.isCreated = true;\n                        }, 5000);\n\n                        $interval.cancel(status);\n                    }\n\n                    getFragmentStatus();\n                }, 5000);\n            });\n        }\n\n        function getFragmentStatus()\n        {\n            var data = {\n                id: vm.fragment.id,\n                job_id: vm.fragment.job_id\n            };\n\n            api.getFragmentStatus(data).then(function (data)\n            {\n                vm.fragment.status = data.status;\n            });\n        }\n\n        function getFragmentError()\n        {\n            var data = {\n                id: vm.fragment.id\n            };\n\n            api.getFragmentError(data).then(function (data)\n            {\n                vm.error = data.error;\n            });\n        }\n\n        function getFragmentUrl()\n        {\n            var data = {\n                id: vm.fragment.id\n            };\n\n            api.getFragmentUrl(data).then(function (data)\n            {\n                vm.fragment.url = data.url;\n\n                getFragmentEmbedUrl();\n            });\n        }\n\n        function getFragmentEmbedUrl()\n        {\n            var data = {\n                id: vm.fragment.id\n            };\n\n            api.getFragmentEmbedUrl(data).then(function (data)\n            {\n                vm.fragment.embed_url = $sce.trustAsResourceUrl(data.embed_url);\n            });\n        }\n    }\n})();\n","(function ()\n{\n    'use strict';\n\n    angular.module('app')\n           .config(authConfig)\n\n    authConfig.$inject = ['$authProvider'];\n\n    function authConfig($authProvider)\n    {\n        $authProvider.configure({\n            apiUrl: '/api'\n        });\n    }\n})();\n","(function ()\n{\n    'use strict';\n\n    angular.module('app.index')\n           .factory('api', api);\n\n    api.$inject = ['$http'];\n\n    function api($http)\n    {\n        return {\n            \"getUserFragments\": getUserFragments,\n            \"createVideo\": createVideo,\n            \"downloadVideo\": downloadVideo,\n            \"uploadVideo\": uploadVideo,\n            \"getVideoEmbedUrl\": getVideoEmbedUrl,\n            \"getVideoStatus\": getVideoStatus,\n            \"getVideoError\": getVideoError,\n            \"createFragment\": createFragment,\n            \"deleteFragment\": deleteFragment,\n            \"uploadFragment\": uploadFragment,\n            \"getFragmentUrl\": getFragmentUrl,\n            \"getFragmentEmbedUrl\": getFragmentEmbedUrl,\n            \"getFragmentStatus\": getFragmentStatus,\n            \"getFragmentError\": getFragmentError,\n        };\n\n        /*\n         |--------------------------------------------------------------------------------------------------------------\n         | Users\n         |--------------------------------------------------------------------------------------------------------------\n         */\n\n        function getUserFragments(data)\n        {\n            return $http.get('/api/users/' + data.id + '/fragments').then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        /*\n         |--------------------------------------------------------------------------------------------------------------\n         | Videos\n         |--------------------------------------------------------------------------------------------------------------\n         */\n\n        function createVideo(data)\n        {\n            return $http.post('/api/videos', data).then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        function downloadVideo(data)\n        {\n            return $http.get('/api/videos/' + data.id + '/download').then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        function uploadVideo(data)\n        {\n            return $http.get('/api/videos/' + data.id + '/upload').then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        function getVideoEmbedUrl(data)\n        {\n            return $http.post('/api/videos/' + data.id + '/embed_url', data).then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        function getVideoStatus(data)\n        {\n            return $http.post('/api/videos/' + data.id + '/status', data).then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        function getVideoError(data)\n        {\n            return $http.get('/api/videos/' + data.id + '/error').then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        /*\n         |--------------------------------------------------------------------------------------------------------------\n         | Fragments\n         |--------------------------------------------------------------------------------------------------------------\n         */\n\n        function createFragment(data)\n        {\n            return $http.post('/api/fragments', data).then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        function deleteFragment(data)\n        {\n            return $http.delete('/api/fragments/' + data.id).then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        function uploadFragment(data)\n        {\n            return $http.get('/api/fragments/' + data.id + '/upload').then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        function getFragmentUrl(data)\n        {\n            return $http.get('/api/fragments/' + data.id + '/url').then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        function getFragmentEmbedUrl(data)\n        {\n            return $http.get('/api/fragments/' + data.id + '/embed_url').then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        function getFragmentStatus(data)\n        {\n            return $http.post('/api/fragments/' + data.id + '/status', data).then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        function getFragmentError(data)\n        {\n            return $http.get('/api/fragments/' + data.id + '/error').then(function (response)\n            {\n                return response.data;\n            });\n        }\n    }\n})();\n","(function()\n{\n    'use strict';\n\n    angular.module('app.index')\n           .directive('appTab', appTab);\n\n    function appTab()\n    {\n        return {\n            restrict: 'A',\n            link: link\n        };\n\n        function link(scope, element, attributes)\n        {\n            $(element).tab();\n        }\n    }\n})();\n","(function()\n{\n    'use strict';\n\n    angular.module('app.index')\n        .directive('appModal', appModal);\n\n    function appModal()\n    {\n        return {\n            restrict: 'A',\n            link: link\n        };\n\n        function link(scope, element, attributes)\n        {\n            $(element).on('click', function()\n            {\n                var modal = $(attributes.modalId);\n\n                modal.modal\n                ({\n                    onHide: function()\n                    {\n                        modal.find('iframe').attr('src', modal.find('iframe').attr('src'));\n                    },\n                    selector: {\n                        close : '.close'\n                    }\n                }).modal('show');\n            })\n        }\n    }\n})();\n"]}