{"version":3,"sources":["app.module.js","index.module.js","index.controller.js","auth.config.js","api.service.js"],"names":[],"mappingsvOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChfile":"app.min.js","sourcesContent":["(function ()\n{\n    'use strict';\n\n    angular.module('app', ['app.index']);\n})();\n","(function ()\n{\n    'use strict';\n\n    angular.module('app.index', ['ng-token-auth', 'ui-rangeSlider']);\n})();\n","(function ()\n{\n    'use strict';\n\n    angular.module('app.index')\n           .controller('IndexController', IndexController);\n\n    IndexController.$inject = ['$auth', '$sce', '$interval', 'api'];\n\n    function IndexController($auth, $sce, $interval, api)\n    {\n        var vm = this;\n\n        vm.video    = [];\n        vm.user     = $auth.user;\n        vm.fragment = [];\n\n        vm.login             = login;\n        vm.logout            = logout;\n        vm.createVideo       = createVideo;\n        vm.downloadVideo     = downloadVideo;\n        vm.uploadVideo       = uploadVideo;\n        vm.getVideoEmbedUrl  = getVideoEmbedUrl;\n        vm.getVideoStatus    = getVideoStatus;\n        vm.createFragment    = createFragment;\n        vm.uploadFragment    = uploadFragment;\n        vm.getFragmentStatus = getFragmentStatus;\n        vm.getFragmentUrl    = getFragmentUrl;\n\n        /*\n         |--------------------------------------------------------------------------------------------------------------\n         | Auth\n         |--------------------------------------------------------------------------------------------------------------\n         */\n\n        function login()\n        {\n            $auth.authenticate('google');\n        }\n\n        function logout()\n        {\n            $auth.signOut();\n        }\n\n        /*\n         |--------------------------------------------------------------------------------------------------------------\n         | Videos\n         |--------------------------------------------------------------------------------------------------------------\n         */\n\n        function createVideo()\n        {\n            var data = {\n                youtube_url: vm.video.youtube_url\n            };\n\n            api.createVideo(data).then(function (data)\n            {\n                vm.video = data;\n                vm.video.isPreviewing = true;\n\n                vm.fragment.start_from  = 0;\n                vm.fragment.end_from    = vm.video.duration;\n                vm.fragment.title       = vm.video.title;\n                vm.fragment.description = vm.video.description;\n\n                getVideoEmbedUrl();\n            });\n        }\n\n        function downloadVideo()\n        {\n            var data = {\n                id: vm.video.id\n            };\n\n            api.downloadVideo(data).then(function (data)\n            {\n                vm.video.status = data.status;\n            });\n\n            var status = $interval(function ()\n            {\n                if (vm.video.status == 'downloaded' || vm.video.status == 'uploaded')\n                {\n                    if (vm.video.status == 'downloaded')\n                    {\n                        uploadVideo();\n                    }\n\n                    if (vm.video.status == 'uploaded')\n                    {\n                        uploadFragment();\n                    }\n\n                    $interval.cancel(status);\n                }\n\n                getVideoStatus();\n            }, 5000);\n        }\n\n        function uploadVideo()\n        {\n            var data = {\n                id: vm.video.id\n            };\n\n            api.uploadVideo(data).then(function (data)\n            {\n                vm.video.status = data.status;\n            });\n\n            var status = $interval(function ()\n            {\n                if (vm.video.status == 'uploaded')\n                {\n                    uploadFragment();\n\n                    $interval.cancel(status);\n                }\n\n                getVideoStatus();\n            }, 5000);\n        }\n\n        function getVideoEmbedUrl()\n        {\n            var data = {\n                id: vm.video.id,\n                start_from: vm.fragment.start_from,\n                end_from: vm.fragment.end_from\n            };\n\n            api.getVideoEmbedUrl(data).then(function (data)\n            {\n                vm.video.embed_url = $sce.trustAsResourceUrl(data.embed_url);\n            });\n        }\n\n        function getVideoStatus()\n        {\n            var data = {\n                id: vm.video.id\n            };\n\n            api.getVideoStatus(data).then(function (data)\n            {\n                vm.video.status = data.status;\n            });\n        }\n\n        /*\n         |--------------------------------------------------------------------------------------------------------------\n         | Fragments\n         |--------------------------------------------------------------------------------------------------------------\n         */\n\n        function createFragment()\n        {\n            var data = {\n                user_id: vm.user.id,\n                video_id: vm.video.id,\n                start_from: vm.fragment.start_from,\n                end_from: vm.fragment.end_from,\n                title: vm.fragment.title,\n                description: vm.fragment.description\n            };\n\n            api.createFragment(data).then(function (data)\n            {\n                vm.fragment = data;\n                vm.fragment.isCreating = true;\n\n                downloadVideo();\n            });\n        }\n\n        function uploadFragment()\n        {\n            var data = {\n                id: vm.fragment.id\n            };\n\n            api.uploadFragment(data).then(function ()\n            {\n\n            });\n\n            var status = $interval(function ()\n            {\n                if (vm.fragment.status == 'uploaded')\n                {\n                    getFragmentUrl();\n\n                    vm.fragment.isCreating = false;\n                    vm.fragment.isCreated = true;\n\n                    $interval.cancel(status);\n                }\n\n                getFragmentStatus();\n            }, 5000);\n        }\n\n        function getFragmentStatus()\n        {\n            var data = {\n                id: vm.fragment.id\n            };\n\n            api.getFragmentStatus(data).then(function (data)\n            {\n                vm.fragment.status = data.status;\n            });\n        }\n\n        function getFragmentUrl()\n        {\n            var data = {\n                id: vm.fragment.id\n            };\n\n            api.getFragmentUrl(data).then(function (data)\n            {\n                vm.fragment.url = data.url;\n            });\n        }\n    }\n})();\n","(function ()\n{\n    'use strict';\n\n    angular.module('app')\n           .config(authConfig)\n\n    authConfig.$inject = ['$authProvider'];\n\n    function authConfig($authProvider)\n    {\n        $authProvider.configure({\n            apiUrl: '/api'\n        });\n    }\n})();\n","(function ()\n{\n    'use strict';\n\n    angular.module('app.index')\n           .factory('api', api);\n\n    api.$inject = ['$http'];\n\n    function api($http)\n    {\n        return {\n            \"createVideo\": createVideo,\n            \"downloadVideo\": downloadVideo,\n            \"uploadVideo\": uploadVideo,\n            \"getVideoEmbedUrl\": getVideoEmbedUrl,\n            \"getVideoStatus\": getVideoStatus,\n            \"createFragment\": createFragment,\n            \"uploadFragment\": uploadFragment,\n            \"getFragmentUrl\": getFragmentUrl,\n            \"getFragmentStatus\": getFragmentStatus,\n        };\n\n        /*\n         |--------------------------------------------------------------------------------------------------------------\n         | Videos\n         |--------------------------------------------------------------------------------------------------------------\n         */\n\n        function createVideo(data)\n        {\n            return $http.post('/api/videos', data).then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        function downloadVideo(data)\n        {\n            return $http.get('/api/videos/' + data.id + '/download').then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        function uploadVideo(data)\n        {\n            return $http.get('/api/videos/' + data.id + '/upload').then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        function getVideoEmbedUrl(data)\n        {\n            return $http.post('/api/videos/' + data.id + '/embed_url', data).then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        function getVideoStatus(data)\n        {\n            return $http.get('/api/videos/' + data.id + '/status').then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        /*\n         |--------------------------------------------------------------------------------------------------------------\n         | Fragments\n         |--------------------------------------------------------------------------------------------------------------\n         */\n\n        function createFragment(data)\n        {\n            return $http.post('/api/fragments', data).then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        function uploadFragment(data)\n        {\n            return $http.get('/api/fragments/' + data.id + '/upload').then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        function getFragmentUrl(data)\n        {\n            return $http.get('/api/fragments/' + data.id + '/url').then(function (response)\n            {\n                return response.data;\n            });\n        }\n\n        function getFragmentStatus(data)\n        {\n            return $http.get('/api/fragments/' + data.id + '/status').then(function (response)\n            {\n                return response.data;\n            });\n        }\n    }\n})();\n"]}